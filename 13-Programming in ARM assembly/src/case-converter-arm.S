//case-converter-arm.S
.text

.global _start
_start:

.code 32

mov r0, #0                  // unsigned int fd
ldr r1, =buffer             // char *buf
mov r2, #buffer_len - 1     // size_t count
mov r7, #3                  // syscall number of read
svc #0

ldr r1, =buffer
mov r2, #0

loop:
ldrb r3, [r1, r2]
cmp r3, #0
beq break_loop          
mov r0, r3
sub r0, #97
cmp r0, #26             
sublo r3, r3, #32
strb r3, [r1, r2]
add r2, r2, #1
b loop

break_loop:


mov r0, #1                      // unsigned int fd
ldr r1, =buffer                 // const char *buf
mov r2, #buffer_len - 1         // size_t count
mov r7, #4                      // syscall number of write
svc #0

mov r0, #0  		            // int exit_code
mov r7, #1			            //syscall number of exit
svc #0


.data

.equ buffer_len, 100
buffer: .space buffer_len
